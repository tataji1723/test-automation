{"name": "test_clearRecentApps", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "request = <SubRequest 'beforeClass' for <TestCaseFunction test_clearRecentApps>>\n\n    @pytest.fixture(scope='class')\n    def beforeClass(request):\n        log.info(\"................Checking Android device is connection to PC..........\")\n        # Check android device in adb and getting serial id of device\n        device = Device()\n>       deviceId = device.getDeviceSerialId()\n\nconftest.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <performance_Test.base.adb_class.Device object at 0x00000274F698FBC0>\n\n    def getDeviceSerialId(self):\n        # This method is to get device serial id_s\n        self.log.info(\"checking device serial-id\")\n        try:\n            result = subprocess.run(['adb', 'devices'], capture_output=True, text=True, check=True)\n            output = result.stdout\n            # split the output by lines and skip the first line (header)\n            lines = output.strip().split('\\n')[1:]\n            # print(lines)\n            # Extra serial ID's\n            serial_ids = [line.split('\\t')[0] for line in lines if line.strip()]\n>           self.log.info(\"Device serial-id:{0}\".format(serial_ids[0]))\nE           IndexError: list index out of range\n\n..\\base\\adb_class.py:31: IndexError"}, "attachments": [{"name": "log", "source": "7ac41ff5-c1c1-4820-94c6-0c695785bfcb-attachment.txt", "type": "text/plain"}], "start": 1728247440727, "stop": 1728247440727, "uuid": "fe77482e-15ec-47be-9848-ac29b7f83916", "historyId": "dc0344371ab65370826ad8100a83d4a4", "testCaseId": "dc0344371ab65370826ad8100a83d4a4", "fullName": "test.displaybrightness.DeviceDisplayBrightness#test_clearRecentApps", "labels": [{"name": "tag", "value": "order(1)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "displaybrightness"}, {"name": "subSuite", "value": "DeviceDisplayBrightness"}, {"name": "host", "value": "PABO0001950"}, {"name": "thread", "value": "14288-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.displaybrightness"}]}